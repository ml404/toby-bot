plugins {
    id 'java'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
    id 'org.jetbrains.kotlin.jvm'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

dependencies {
    implementation project(':common')
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework:spring-orm'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    runtimeOnly 'org.hibernate.orm:hibernate-core:6.6.1.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation project(configuration: 'testArtifacts', path: ':common')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.test {
    useJUnitPlatform() // Ensure JUnit platform is being used
}

jar {
    enabled = true
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

configurations {
    testArtifacts
}

tasks.register('testJar', Jar) {
    archiveClassifier = 'tests'
    from sourceSets.test.output
}

artifacts {
    testArtifacts testJar
}
