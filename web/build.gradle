plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.jetbrains.kotlin.jvm'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
    }
}

dependencies {
    implementation project(":common")
    implementation project(':core-api')
    implementation project(":database")
    implementation "net.dv8tion:JDA:$jdaVersion"
    compileOnly 'org.jetbrains:annotations:24.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
    implementation 'org.springdoc:springdoc-openapi-kotlin:1.7.0'
    testImplementation project(path: ':common', configuration: 'testArtifacts')
    testImplementation project(path: ':core-api', configuration: 'testArtifacts')
    testImplementation project(path: ':database', configuration: 'testArtifacts')
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform() // Ensure you are using the right testing framework
}

tasks.register('deleteExtras', Delete) {
    doLast {
        def libsDir = file("build/libs")
        def tmpDir = file("build/tmp")
        tmpDir.eachFile { file -> file.delete() }
        libsDir.eachFile { file ->
            if (file.name.endsWith("SNAPSHOT.jar")) {
                println "Keeping ${file.name}"
            } else {
                file.delete()
                println "Deleted ${file.name}"
            }
        }
    }
}

tasks.named('build').configure {
    finalizedBy tasks.named('deleteExtras')
}