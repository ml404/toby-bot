name: Update Wiki

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
  update-wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true  # If your wiki is a submodule
      - name: Get Command Documentation
        env:
          BASE_URL: ${{ vars.BASE_URL }}
        run: |
          # Fetch commands and save to a temporary file
          TEMP_FILE="wiki/Commands_temp.md"
          if curl -X GET "$BASE_URL/commands/wiki" -o "$TEMP_FILE"; then
            echo "Successfully fetched command documentation."
          else
            echo "Failed to fetch command documentation."
            exit 1  # Exit with an error code if curl fails
          fi

      - name: Check for Differences
        run: |
          # Compare the fetched file with the existing Commands.md
          if ! diff -q "wiki/Commands_temp.md" "wiki/Commands.md" > /dev/null; then
            echo "Differences found. Updating Commands.md."
            # If differences are found, overwrite the existing Commands.md
            mv "wiki/Commands_temp.md" "wiki/Commands.md"
          else
            echo "No differences found. Skipping update."
            exit 0  # Exit successfully without making changes
          fi

      - name: Commit and Push Changes
        run: |
          cd wiki
          # Configure Git user information
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          # Check if there are changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            # Stage changes in the wiki submodule
            git add Commands.md

            # Commit changes in the submodule
            git commit -m "Update commands documentation"
            echo "Submodule changes committed."

            # Push changes to the submodule branch
            git push origin master  # Ensure this matches your wiki's branch

            # Navigate back to the root of the main repository
            cd ..

            # Stage the updated submodule reference in the main repository
            git add wiki

            # Commit the updated submodule reference in the main repository
            git commit -m "Update submodule reference" || echo "No changes to commit for submodule reference."

            # Push the updated reference to the main repository
            git push origin master  # Ensure this matches your main branch
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Automatically provided by GitHub Actions