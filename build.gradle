import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        springBootVersion = '3.1.4'
        jdaVersion = '5.0.2'
        kotlin_version = '2.0.0-RC3'
        kotlinx_version = '1.9.0-RC'
        kotlin_logger = '2.1.23'
        ktor_version = '2.3.12'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.springframework.boot' version "$springBootVersion" apply false
    id 'io.spring.dependency-management' version '1.0.15.RELEASE' apply false
    id 'java'
    id 'com.autonomousapps.dependency-analysis' version '1.25.0'
}

allprojects {
    group = 'com.github.ml404'
    version = '6.0-SNAPSHOT'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
        maven { name 'm2-dv8tion'; url 'https://m2.dv8tion.net/releases' }
        maven { url = uri("https://plugins.gradle.org/m2/") }
        maven {
            name 'm2-duncte123'
            url 'https://m2.duncte123.dev/releases'
        }
        maven { url = "https://maven.lavalink.dev/releases" }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    tasks.withType(KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "17"
        }
    }

    test {
        useJUnitPlatform()
    }

    configurations {
        configureEach {
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }
}