import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    ext {
        springBootVersion = '3.1.4'
        jdaVersion = '5.0.2'
        kotlin_version = '2.0.0-RC3'
        kotlinx_version = '1.9.0-RC'
        ktor_version = '2.3.12'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion} '
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.autonomousapps.dependency-analysis' version '1.25.0'
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.autonomousapps.dependency-analysis'

group = 'com.github.ml404'
version = '6.0-SNAPSHOT'
mainClassName = "toby.Application"

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven { name 'm2-dv8tion'; url 'https://m2.dv8tion.net/releases' }
    maven { url = uri("https://plugins.gradle.org/m2/") }
    maven {
        name 'm2-duncte123'
        url 'https://m2.duncte123.dev/releases'
    }
    maven { url = "https://maven.lavalink.dev/releases" }
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

dependencies {
    compileOnly 'org.jetbrains:annotations:24.0.0'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation "net.dv8tion:JDA:$jdaVersion"
    implementation 'dev.arbjerg:lavaplayer:2.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'me.duncte123:botCommons:3.1.18'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-cio:$ktor_version"
    implementation "io.ktor:ktor-client-json:$ktor_version"
    implementation "io.ktor:ktor-client-serialization:$ktor_version"
    testImplementation "io.ktor:ktor-client-mock:$ktor_version"
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework:spring-jdbc'
    implementation 'org.springframework:spring-orm'
    implementation 'org.springframework:spring-context'
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'io.github.microutils:kotlin-logging-jvm:2.1.23'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
    implementation 'dev.lavalink.youtube:common:1.7.2'
    runtimeOnly 'dev.arbjerg:lavaplayer-natives:2.2.1'
    runtimeOnly 'org.hibernate.orm:hibernate-core:6.3.1.Final'
    runtimeOnly 'com.h2database:h2'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_version"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'io.mockk:mockk:1.13.11'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'com.h2database:h2:2.2.224'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

tasks.register('deleteExtras', Delete) {
    doLast {
        def libsDir = file("build/libs")
        def tmpDir = file("build/tmp")
        def distributions = file("build/distributions")
        tmpDir.eachFile { file -> file.delete() }
        distributions.eachFile { file -> file.delete() }
        libsDir.eachFile { file ->
            if (file.name.endsWith("SNAPSHOT.jar")) {
                println "Keeping ${file.name}"
            } else {
                file.delete()
                println "Deleted ${file.name}"
            }
        }
    }
}

tasks.named('build').configure {
    finalizedBy tasks.named('deleteExtras')
}

bootJar {
    launchScript()
    mainClassName = 'toby.Application'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

test {
    useJUnitPlatform()
}

kotlin {
    jvmToolchain(17)
}
