buildscript {
    ext {
        springBootVersion = '3.1.4'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.autonomousapps.dependency-analysis' version '1.25.0'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.autonomousapps.dependency-analysis'


mainClassName = "toby.Application"
group = 'com.github.ml404'
version = '5.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
}

configurations {
    configureEach {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
//    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    // https://mvnrepository.com/artifact/com.autonomousapps.dependency-analysis/com.autonomousapps.dependency-analysis.gradle.plugin
    compileOnly  'org.jetbrains:annotations:24.0.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    //https://stackoverflow.com/questions/23796404/could-not-find-method-compile-for-arguments-gradle
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-beta.15'
    implementation 'dev.arbjerg:lavaplayer:2.0.2'
    runtimeOnly 'dev.arbjerg:lavaplayer-natives:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    // https://mvnrepository.com/artifact/me.duncte123/botCommons
    implementation group: 'me.duncte123', name: 'botCommons', version: '2.0.122'
    implementation 'com.google.code.gson:gson:2.10.1'
    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql'
    // https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-core
    runtimeOnly 'org.hibernate.orm:hibernate-core:6.3.1.Final'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-web-services')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-autoconfigure')
    implementation('org.springframework:spring-jdbc')
    implementation('org.springframework:spring-orm')
    implementation('org.springframework:spring-context')
    // https://mvnrepository.com/artifact/com.h2database/h2
    testRuntimeOnly  group: 'com.h2database', name: 'h2', version: '2.2.224'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'
    // https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-inline:4.2.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'

}

tasks.register('deleteExtras', Delete) {
    doLast {
        def libsDir = file("build/libs")
        def tmpDir = file("build/tmp")
        def distributions = file("build/distributions")
        tmpDir.eachFile { file -> file.delete() }
        distributions.eachFile { file -> file.delete() }
        libsDir.eachFile { file ->
            if (file.name.endsWith("SNAPSHOT.jar")) {
                println "Keeping ${file.name}"
            } else {
                file.delete()
                println "Deleted ${file.name}"
            }
        }
    }
}


tasks.named('build').configure {
    finalizedBy tasks.named('deleteExtras')
}


bootJar {
    launchScript()
    mainClassName = 'toby.Application'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}
