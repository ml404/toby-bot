buildscript {
    ext {
        springBootVersion = '2.6.2'
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'java'
    id 'application'
    id "nebula.lint" version "17.6.0"
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "nebula.lint"
gradleLint {
    rules = ['unused-dependency']
}

//needed by shadowJar process
mainClassName = "toby.Application"
group = 'com.github.ml404'
version = '5.0-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_15
java.targetCompatibility = JavaVersion.VERSION_15

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
}

configurations {
    implementation.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    runtimeOnly 'org.junit.jupiter:junit-jupiter:5.8.2'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

//    testCompile group: 'junit', name: 'junit', version: '4.12'
    //https://stackoverflow.com/questions/23796404/could-not-find-method-compile-for-arguments-gradle
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-beta.6'
    implementation 'com.sedmelluq:lavaplayer:1.3.78'
    implementation 'com.sedmelluq:lavaplayer-natives:1.3.14'
    runtimeOnly('org.hibernate:hibernate-core:5.6.3.Final')
    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    runtimeOnly 'ch.qos.logback:logback-classic:1.2.10'
    // https://mvnrepository.com/artifact/me.duncte123/botCommons
    implementation group: 'me.duncte123', name: 'botCommons', version: '2.0.122'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'
    implementation('org.springframework.boot:spring-boot-starter-web:2.6.2')
    implementation('org.springframework.boot:spring-boot-starter-web-services:2.6.2')
    implementation('org.springframework.boot:spring-boot-starter-jetty:2.6.2')
    implementation('org.springframework.boot:spring-boot-starter-webflux:2.6.2')
    implementation('org.springframework.boot:spring-boot-starter-actuator:2.6.2')
    implementation('org.springframework.boot:spring-boot-autoconfigure:2.6.2')
    implementation('org.springframework:spring-jdbc:5.3.14')
    implementation('org.springframework:spring-orm:5.3.14')
    implementation('org.springframework:spring-context:5.3.14')
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    implementation 'javax.persistence:javax.persistence-api:2.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.mockito:mockito-inline:4.2.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'

}

task stage {
    dependsOn build
    doLast {
        delete fileTree(dir: "build", exclude: "libs")
        delete fileTree(dir: "build/libs", exclude: "*.jar")
    }
    dependsOn clean
}
build.mustRunAfter clean

bootJar {
    launchScript()
}
test {
    useJUnitPlatform()
}
